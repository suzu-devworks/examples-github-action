# 11. ワークフローの背景情報をコメントへ書き残す
#
# ワークフローの目的や影響範囲、参考URLなどを数行で書く。
# 実装詳細ではなく、コードから読み取れない背景情報を中心にする。
#
# references:
#  - https://gihyo.jp/article/2024/10/good-practices-for-github-actions
---
name: Example
on:
  # 10. workflow_dispatchイベントで楽に動作確認する
  workflow_dispatch:
  # 5. 不要なイベントで起動しないようにフィルタリングする
  pull_request:
    paths: 
      - ".github/workflows/ex-11-good-practices.yaml"

# ワークフローレベルでパーミッションをすべて無効化
permissions: {}

# 2. デフォルトシェルでBashのパイプエラーを拾う
defaults:
  run:
    shell: bash

# 4. Concurrencyで古いワークフローを自動キャンセルする
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  example:
    # 6. 最安値のUbuntuランナーを優先する
    runs-on: ubuntu-latest
    # 1. タイムアウトを常に指定する
    timeout-minutes: 5
    # 7. GITHUB_TOKENのパーミッションはジョブレベルで定義する
    permissions:
      contents: read
    steps:
      # 8. アクションはコミットハッシュで固定する
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      # 9. Bashトレーシングオプションでログを詳細に出力する(ログに表示されている気がする)
      # 3.「actionlint」ですばやく構文エラーをチェックする
      - name: Run actionlint
        run: |
          set -x
          docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" rhysd/actionlint:1.7.3
