name: Chapter 3 - Cache

on:
  pull_request:
    paths:
      - ".github/workflows/cache.yaml"
  workflow_dispatch:

jobs:
  build-start:
    runs-on: ubuntu-latest
    steps:
      - run: echo 'start!'

  build-go:
    runs-on: ubuntu-latest
    needs: build-start
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.1"
          # cache: true (default)
      - run: go install

  build-go-cache:
    runs-on: ubuntu-latest
    needs: build-go
    steps:
      - uses: actions/checkout@v4
      - name: build-start のキャッシュを再現
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.1"
          cache: false
      - run: go install

  build-node:
    runs-on: ubuntu-latest
    needs: build-start
    steps:
      - uses: actions/checkout@v4
      # https://github.com/actions/setup-node/blob/v4/docs/advanced-usage.md#caching-packages-data
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"
      - run: yarn install --frozen-lockfile

  build-node-pnpm:
    runs-on: ubuntu-latest
    needs: build-node
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - run: pnpm install

  build-dotnet:
    runs-on: ubuntu-latest
    needs: build-start
    defaults:
      run:
        working-directory: ./packages/dotnet
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"
          cache: true
          cache-dependency-path: "**/packages.lock.json"
      - run: dotnet restore --locked-mode

  build-join:
    runs-on: ubuntu-latest
    needs: [build-go-cache, build-node-pnpm, build-dotnet]
    steps:
      - run: echo 'end'
